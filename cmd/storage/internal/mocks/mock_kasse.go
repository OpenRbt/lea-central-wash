// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DiaElectronics/lea-central-wash/cmd/storage/internal/app (interfaces: KasseSvc)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockKasseSvc is a mock of KasseSvc interface
type MockKasseSvc struct {
	ctrl     *gomock.Controller
	recorder *MockKasseSvcMockRecorder
}

// MockKasseSvcMockRecorder is the mock recorder for MockKasseSvc
type MockKasseSvcMockRecorder struct {
	mock *MockKasseSvc
}

// NewMockKasseSvc creates a new mock instance
func NewMockKasseSvc(ctrl *gomock.Controller) *MockKasseSvc {
	mock := &MockKasseSvc{ctrl: ctrl}
	mock.recorder = &MockKasseSvcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockKasseSvc) EXPECT() *MockKasseSvcMockRecorder {
	return m.recorder
}

// Info mocks base method
func (m *MockKasseSvc) Info() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Info")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Info indicates an expected call of Info
func (mr *MockKasseSvcMockRecorder) Info() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Info", reflect.TypeOf((*MockKasseSvc)(nil).Info))
}
