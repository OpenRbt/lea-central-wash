// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DiaElectronics/lea-central-wash/cmd/storage/internal/app (interfaces: WeatherSvc)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockWeatherSvc is a mock of WeatherSvc interface
type MockWeatherSvc struct {
	ctrl     *gomock.Controller
	recorder *MockWeatherSvcMockRecorder
}

// MockWeatherSvcMockRecorder is the mock recorder for MockWeatherSvc
type MockWeatherSvcMockRecorder struct {
	mock *MockWeatherSvc
}

// NewMockWeatherSvc creates a new mock instance
func NewMockWeatherSvc(ctrl *gomock.Controller) *MockWeatherSvc {
	mock := &MockWeatherSvc{ctrl: ctrl}
	mock.recorder = &MockWeatherSvcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockWeatherSvc) EXPECT() *MockWeatherSvcMockRecorder {
	return m.recorder
}

// CurrentTemperature mocks base method
func (m *MockWeatherSvc) CurrentTemperature() (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CurrentTemperature")
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CurrentTemperature indicates an expected call of CurrentTemperature
func (mr *MockWeatherSvcMockRecorder) CurrentTemperature() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CurrentTemperature", reflect.TypeOf((*MockWeatherSvc)(nil).CurrentTemperature))
}
