// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DiaElectronics/lea-central-wash/cmd/storage/internal/app (interfaces: HardwareAccessLayer)

// Package mocks is a generated GoMock package.
package mocks

import (
	app "github.com/DiaElectronics/lea-central-wash/cmd/storage/internal/app"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockHardwareAccessLayer is a mock of HardwareAccessLayer interface
type MockHardwareAccessLayer struct {
	ctrl     *gomock.Controller
	recorder *MockHardwareAccessLayerMockRecorder
}

// MockHardwareAccessLayerMockRecorder is the mock recorder for MockHardwareAccessLayer
type MockHardwareAccessLayerMockRecorder struct {
	mock *MockHardwareAccessLayer
}

// NewMockHardwareAccessLayer creates a new mock instance
func NewMockHardwareAccessLayer(ctrl *gomock.Controller) *MockHardwareAccessLayer {
	mock := &MockHardwareAccessLayer{ctrl: ctrl}
	mock.recorder = &MockHardwareAccessLayerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHardwareAccessLayer) EXPECT() *MockHardwareAccessLayerMockRecorder {
	return m.recorder
}

// ControlBoard mocks base method
func (m *MockHardwareAccessLayer) ControlBoard(arg0 int) (app.ControlBoard, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ControlBoard", arg0)
	ret0, _ := ret[0].(app.ControlBoard)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ControlBoard indicates an expected call of ControlBoard
func (mr *MockHardwareAccessLayerMockRecorder) ControlBoard(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ControlBoard", reflect.TypeOf((*MockHardwareAccessLayer)(nil).ControlBoard), arg0)
}

// RunProgram mocks base method
func (m *MockHardwareAccessLayer) RunProgram(arg0 int, arg1 app.RelayConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunProgram", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RunProgram indicates an expected call of RunProgram
func (mr *MockHardwareAccessLayerMockRecorder) RunProgram(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunProgram", reflect.TypeOf((*MockHardwareAccessLayer)(nil).RunProgram), arg0, arg1)
}

// Start mocks base method
func (m *MockHardwareAccessLayer) Start() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Start")
}

// Start indicates an expected call of Start
func (mr *MockHardwareAccessLayerMockRecorder) Start() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockHardwareAccessLayer)(nil).Start))
}
