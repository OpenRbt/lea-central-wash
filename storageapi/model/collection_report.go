// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CollectionReport collection report
//
// swagger:model CollectionReport
type CollectionReport struct {

	// banknotes
	Banknotes int64 `json:"banknotes,omitempty"`

	// bonuses
	Bonuses int64 `json:"bonuses,omitempty"`

	// cars total
	CarsTotal int64 `json:"carsTotal,omitempty"`

	// coins
	Coins int64 `json:"coins,omitempty"`

	// ctime
	Ctime int64 `json:"ctime,omitempty"`

	// electronical
	Electronical int64 `json:"electronical,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// qr money
	QrMoney int64 `json:"qrMoney,omitempty"`

	// service
	Service int64 `json:"service,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *CollectionReport) UnmarshalJSON(data []byte) error {
	var props struct {

		// banknotes
		Banknotes int64 `json:"banknotes,omitempty"`

		// bonuses
		Bonuses int64 `json:"bonuses,omitempty"`

		// cars total
		CarsTotal int64 `json:"carsTotal,omitempty"`

		// coins
		Coins int64 `json:"coins,omitempty"`

		// ctime
		Ctime int64 `json:"ctime,omitempty"`

		// electronical
		Electronical int64 `json:"electronical,omitempty"`

		// id
		ID int64 `json:"id,omitempty"`

		// qr money
		QrMoney int64 `json:"qrMoney,omitempty"`

		// service
		Service int64 `json:"service,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.Banknotes = props.Banknotes
	m.Bonuses = props.Bonuses
	m.CarsTotal = props.CarsTotal
	m.Coins = props.Coins
	m.Ctime = props.Ctime
	m.Electronical = props.Electronical
	m.ID = props.ID
	m.QrMoney = props.QrMoney
	m.Service = props.Service
	return nil
}

// Validate validates this collection report
func (m *CollectionReport) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this collection report based on context it is used
func (m *CollectionReport) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CollectionReport) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CollectionReport) UnmarshalBinary(b []byte) error {
	var res CollectionReport
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
