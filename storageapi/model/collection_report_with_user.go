// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CollectionReportWithUser collection report with user
//
// swagger:model CollectionReportWithUser
type CollectionReportWithUser struct {

	// banknotes
	Banknotes int64 `json:"banknotes,omitempty"`

	// cars total
	CarsTotal int64 `json:"carsTotal,omitempty"`

	// coins
	Coins int64 `json:"coins,omitempty"`

	// ctime
	Ctime int64 `json:"ctime,omitempty"`

	// electronical
	Electronical int64 `json:"electronical,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// service
	Service int64 `json:"service,omitempty"`

	// user
	User string `json:"user,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (m *CollectionReportWithUser) UnmarshalJSON(data []byte) error {
	var props struct {

		// banknotes
		Banknotes int64 `json:"banknotes,omitempty"`

		// cars total
		CarsTotal int64 `json:"carsTotal,omitempty"`

		// coins
		Coins int64 `json:"coins,omitempty"`

		// ctime
		Ctime int64 `json:"ctime,omitempty"`

		// electronical
		Electronical int64 `json:"electronical,omitempty"`

		// id
		ID int64 `json:"id,omitempty"`

		// service
		Service int64 `json:"service,omitempty"`

		// user
		User string `json:"user,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	m.Banknotes = props.Banknotes
	m.CarsTotal = props.CarsTotal
	m.Coins = props.Coins
	m.Ctime = props.Ctime
	m.Electronical = props.Electronical
	m.ID = props.ID
	m.Service = props.Service
	m.User = props.User
	return nil
}

// Validate validates this collection report with user
func (m *CollectionReportWithUser) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this collection report with user based on context it is used
func (m *CollectionReportWithUser) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CollectionReportWithUser) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CollectionReportWithUser) UnmarshalBinary(b []byte) error {
	var res CollectionReportWithUser
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
