// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RelayStat relay stat
// swagger:model RelayStat
type RelayStat struct {

	// relay ID
	// Maximum: 6
	// Minimum: 1
	RelayID int64 `json:"relayID,omitempty"`

	// switched count
	SwitchedCount int64 `json:"switchedCount,omitempty"`

	// total time on
	TotalTimeOn int64 `json:"totalTimeOn,omitempty"`
}

// Validate validates this relay stat
func (m *RelayStat) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRelayID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RelayStat) validateRelayID(formats strfmt.Registry) error {

	if swag.IsZero(m.RelayID) { // not required
		return nil
	}

	if err := validate.MinimumInt("relayID", "body", int64(m.RelayID), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("relayID", "body", int64(m.RelayID), 6, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RelayStat) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RelayStat) UnmarshalBinary(b []byte) error {
	var res RelayStat
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
