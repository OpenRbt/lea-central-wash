// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// MoneyReport money report
// swagger:model MoneyReport
type MoneyReport struct {

	// banknotes
	Banknotes int64 `json:"banknotes,omitempty"`

	// cars total
	CarsTotal int64 `json:"carsTotal,omitempty"`

	// coins
	Coins int64 `json:"coins,omitempty"`

	// electronical
	Electronical int64 `json:"electronical,omitempty"`

	// hash
	// Required: true
	Hash Hash `json:"hash"`

	// service
	Service int64 `json:"service,omitempty"`
}

// Validate validates this money report
func (m *MoneyReport) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHash(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MoneyReport) validateHash(formats strfmt.Registry) error {

	if err := m.Hash.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("hash")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MoneyReport) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MoneyReport) UnmarshalBinary(b []byte) error {
	var res MoneyReport
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
