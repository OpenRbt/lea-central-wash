// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CardReaderConfig card reader config
// swagger:model CardReaderConfig
type CardReaderConfig struct {

	// card reader type
	// Enum: [NOT_USED VENDOTEK PAYMENT_WORLD]
	CardReaderType string `json:"cardReaderType,omitempty"`

	// host
	Host string `json:"host,omitempty"`

	// port
	Port string `json:"port,omitempty"`

	// station ID
	// Required: true
	StationID *int64 `json:"stationID"`
}

// Validate validates this card reader config
func (m *CardReaderConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCardReaderType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStationID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var cardReaderConfigTypeCardReaderTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NOT_USED","VENDOTEK","PAYMENT_WORLD"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		cardReaderConfigTypeCardReaderTypePropEnum = append(cardReaderConfigTypeCardReaderTypePropEnum, v)
	}
}

const (

	// CardReaderConfigCardReaderTypeNOTUSED captures enum value "NOT_USED"
	CardReaderConfigCardReaderTypeNOTUSED string = "NOT_USED"

	// CardReaderConfigCardReaderTypeVENDOTEK captures enum value "VENDOTEK"
	CardReaderConfigCardReaderTypeVENDOTEK string = "VENDOTEK"

	// CardReaderConfigCardReaderTypePAYMENTWORLD captures enum value "PAYMENT_WORLD"
	CardReaderConfigCardReaderTypePAYMENTWORLD string = "PAYMENT_WORLD"
)

// prop value enum
func (m *CardReaderConfig) validateCardReaderTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, cardReaderConfigTypeCardReaderTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CardReaderConfig) validateCardReaderType(formats strfmt.Registry) error {

	if swag.IsZero(m.CardReaderType) { // not required
		return nil
	}

	// value enum
	if err := m.validateCardReaderTypeEnum("cardReaderType", "body", m.CardReaderType); err != nil {
		return err
	}

	return nil
}

func (m *CardReaderConfig) validateStationID(formats strfmt.Registry) error {

	if err := validate.Required("stationID", "body", m.StationID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CardReaderConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CardReaderConfig) UnmarshalBinary(b []byte) error {
	var res CardReaderConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
