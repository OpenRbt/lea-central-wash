// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetStationWashConfigVarBoolHandlerFunc turns a function with the right signature into a get station wash config var bool handler
type GetStationWashConfigVarBoolHandlerFunc func(GetStationWashConfigVarBoolParams) GetStationWashConfigVarBoolResponder

// Handle executing the request and returning a response
func (fn GetStationWashConfigVarBoolHandlerFunc) Handle(params GetStationWashConfigVarBoolParams) GetStationWashConfigVarBoolResponder {
	return fn(params)
}

// GetStationWashConfigVarBoolHandler interface for that can handle valid get station wash config var bool params
type GetStationWashConfigVarBoolHandler interface {
	Handle(GetStationWashConfigVarBoolParams) GetStationWashConfigVarBoolResponder
}

// NewGetStationWashConfigVarBool creates a new http.Handler for the get station wash config var bool operation
func NewGetStationWashConfigVarBool(ctx *middleware.Context, handler GetStationWashConfigVarBoolHandler) *GetStationWashConfigVarBool {
	return &GetStationWashConfigVarBool{Context: ctx, Handler: handler}
}

/*
	GetStationWashConfigVarBool swagger:route POST /get-wash-config-var-bool getStationWashConfigVarBool

GetStationWashConfigVarBool get station wash config var bool API
*/
type GetStationWashConfigVarBool struct {
	Context *middleware.Context
	Handler GetStationWashConfigVarBoolHandler
}

func (o *GetStationWashConfigVarBool) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetStationWashConfigVarBoolParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetStationWashConfigVarBoolBody ArgGetStationConfigVar
//
// swagger:model GetStationWashConfigVarBoolBody
type GetStationWashConfigVarBoolBody struct {

	// hash
	Hash string `json:"hash,omitempty"`

	// name
	Name string `json:"name,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *GetStationWashConfigVarBoolBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// hash
		Hash string `json:"hash,omitempty"`

		// name
		Name string `json:"name,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.Hash = props.Hash
	o.Name = props.Name
	return nil
}

// Validate validates this get station wash config var bool body
func (o *GetStationWashConfigVarBoolBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get station wash config var bool body based on context it is used
func (o *GetStationWashConfigVarBoolBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetStationWashConfigVarBoolBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetStationWashConfigVarBoolBody) UnmarshalBinary(b []byte) error {
	var res GetStationWashConfigVarBoolBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
