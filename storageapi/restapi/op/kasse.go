// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// KasseHandlerFunc turns a function with the right signature into a kasse handler
type KasseHandlerFunc func(KasseParams) KasseResponder

// Handle executing the request and returning a response
func (fn KasseHandlerFunc) Handle(params KasseParams) KasseResponder {
	return fn(params)
}

// KasseHandler interface for that can handle valid kasse params
type KasseHandler interface {
	Handle(KasseParams) KasseResponder
}

// NewKasse creates a new http.Handler for the kasse operation
func NewKasse(ctx *middleware.Context, handler KasseHandler) *Kasse {
	return &Kasse{Context: ctx, Handler: handler}
}

/* Kasse swagger:route POST /kasse kasse

Kasse kasse API

*/
type Kasse struct {
	Context *middleware.Context
	Handler KasseHandler
}

func (o *Kasse) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewKasseParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
