// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetServerInfoHandlerFunc turns a function with the right signature into a get server info handler
type GetServerInfoHandlerFunc func(GetServerInfoParams) GetServerInfoResponder

// Handle executing the request and returning a response
func (fn GetServerInfoHandlerFunc) Handle(params GetServerInfoParams) GetServerInfoResponder {
	return fn(params)
}

// GetServerInfoHandler interface for that can handle valid get server info params
type GetServerInfoHandler interface {
	Handle(GetServerInfoParams) GetServerInfoResponder
}

// NewGetServerInfo creates a new http.Handler for the get server info operation
func NewGetServerInfo(ctx *middleware.Context, handler GetServerInfoHandler) *GetServerInfo {
	return &GetServerInfo{Context: ctx, Handler: handler}
}

/*
	GetServerInfo swagger:route GET /server/info getServerInfo

GetServerInfo get server info API
*/
type GetServerInfo struct {
	Context *middleware.Context
	Handler GetServerInfoHandler
}

func (o *GetServerInfo) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetServerInfoParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
