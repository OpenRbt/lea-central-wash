// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
)

// MeasureVolumeMillilitersNoContentCode is the HTTP code returned for type MeasureVolumeMillilitersNoContent
const MeasureVolumeMillilitersNoContentCode int = 204

/*MeasureVolumeMillilitersNoContent OK

swagger:response measureVolumeMillilitersNoContent
*/
type MeasureVolumeMillilitersNoContent struct {
}

// NewMeasureVolumeMillilitersNoContent creates MeasureVolumeMillilitersNoContent with default headers values
func NewMeasureVolumeMillilitersNoContent() *MeasureVolumeMillilitersNoContent {

	return &MeasureVolumeMillilitersNoContent{}
}

// WriteResponse to the client
func (o *MeasureVolumeMillilitersNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *MeasureVolumeMillilitersNoContent) MeasureVolumeMillilitersResponder() {}

// MeasureVolumeMillilitersNotFoundCode is the HTTP code returned for type MeasureVolumeMillilitersNotFound
const MeasureVolumeMillilitersNotFoundCode int = 404

/*MeasureVolumeMillilitersNotFound not found

swagger:response measureVolumeMillilitersNotFound
*/
type MeasureVolumeMillilitersNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewMeasureVolumeMillilitersNotFound creates MeasureVolumeMillilitersNotFound with default headers values
func NewMeasureVolumeMillilitersNotFound() *MeasureVolumeMillilitersNotFound {

	return &MeasureVolumeMillilitersNotFound{}
}

// WithPayload adds the payload to the measure volume milliliters not found response
func (o *MeasureVolumeMillilitersNotFound) WithPayload(payload string) *MeasureVolumeMillilitersNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the measure volume milliliters not found response
func (o *MeasureVolumeMillilitersNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MeasureVolumeMillilitersNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *MeasureVolumeMillilitersNotFound) MeasureVolumeMillilitersResponder() {}

// MeasureVolumeMillilitersInternalServerErrorCode is the HTTP code returned for type MeasureVolumeMillilitersInternalServerError
const MeasureVolumeMillilitersInternalServerErrorCode int = 500

/*MeasureVolumeMillilitersInternalServerError internal error

swagger:response measureVolumeMillilitersInternalServerError
*/
type MeasureVolumeMillilitersInternalServerError struct {
}

// NewMeasureVolumeMillilitersInternalServerError creates MeasureVolumeMillilitersInternalServerError with default headers values
func NewMeasureVolumeMillilitersInternalServerError() *MeasureVolumeMillilitersInternalServerError {

	return &MeasureVolumeMillilitersInternalServerError{}
}

// WriteResponse to the client
func (o *MeasureVolumeMillilitersInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}

func (o *MeasureVolumeMillilitersInternalServerError) MeasureVolumeMillilitersResponder() {}

type MeasureVolumeMillilitersNotImplementedResponder struct {
	middleware.Responder
}

func (*MeasureVolumeMillilitersNotImplementedResponder) MeasureVolumeMillilitersResponder() {}

func MeasureVolumeMillilitersNotImplemented() MeasureVolumeMillilitersResponder {
	return &MeasureVolumeMillilitersNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.MeasureVolumeMilliliters has not yet been implemented",
		),
	}
}

type MeasureVolumeMillilitersResponder interface {
	middleware.Responder
	MeasureVolumeMillilitersResponder()
}
