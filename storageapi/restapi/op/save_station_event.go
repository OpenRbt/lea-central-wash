// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// SaveStationEventHandlerFunc turns a function with the right signature into a save station event handler
type SaveStationEventHandlerFunc func(SaveStationEventParams) SaveStationEventResponder

// Handle executing the request and returning a response
func (fn SaveStationEventHandlerFunc) Handle(params SaveStationEventParams) SaveStationEventResponder {
	return fn(params)
}

// SaveStationEventHandler interface for that can handle valid save station event params
type SaveStationEventHandler interface {
	Handle(SaveStationEventParams) SaveStationEventResponder
}

// NewSaveStationEvent creates a new http.Handler for the save station event operation
func NewSaveStationEvent(ctx *middleware.Context, handler SaveStationEventHandler) *SaveStationEvent {
	return &SaveStationEvent{Context: ctx, Handler: handler}
}

/* SaveStationEvent swagger:route POST /save-station-event saveStationEvent

SaveStationEvent save station event API

*/
type SaveStationEvent struct {
	Context *middleware.Context
	Handler SaveStationEventHandler
}

func (o *SaveStationEvent) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewSaveStationEventParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
