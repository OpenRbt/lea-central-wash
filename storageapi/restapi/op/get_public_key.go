// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetPublicKeyHandlerFunc turns a function with the right signature into a get public key handler
type GetPublicKeyHandlerFunc func(GetPublicKeyParams) GetPublicKeyResponder

// Handle executing the request and returning a response
func (fn GetPublicKeyHandlerFunc) Handle(params GetPublicKeyParams) GetPublicKeyResponder {
	return fn(params)
}

// GetPublicKeyHandler interface for that can handle valid get public key params
type GetPublicKeyHandler interface {
	Handle(GetPublicKeyParams) GetPublicKeyResponder
}

// NewGetPublicKey creates a new http.Handler for the get public key operation
func NewGetPublicKey(ctx *middleware.Context, handler GetPublicKeyHandler) *GetPublicKey {
	return &GetPublicKey{Context: ctx, Handler: handler}
}

/*
	GetPublicKey swagger:route GET /public-key getPublicKey

GetPublicKey get public key API
*/
type GetPublicKey struct {
	Context *middleware.Context
	Handler GetPublicKeyHandler
}

func (o *GetPublicKey) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetPublicKeyParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
