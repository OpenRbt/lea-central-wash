// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/DiaElectronics/lea-central-wash/storageapi/model"
)

// GetStationConfigVarIntOKCode is the HTTP code returned for type GetStationConfigVarIntOK
const GetStationConfigVarIntOKCode int = 200

/*GetStationConfigVarIntOK OK

swagger:response getStationConfigVarIntOK
*/
type GetStationConfigVarIntOK struct {

	/*
	  In: Body
	*/
	Payload *model.StationConfigVarInt `json:"body,omitempty"`
}

// NewGetStationConfigVarIntOK creates GetStationConfigVarIntOK with default headers values
func NewGetStationConfigVarIntOK() *GetStationConfigVarIntOK {

	return &GetStationConfigVarIntOK{}
}

// WithPayload adds the payload to the get station config var int o k response
func (o *GetStationConfigVarIntOK) WithPayload(payload *model.StationConfigVarInt) *GetStationConfigVarIntOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get station config var int o k response
func (o *GetStationConfigVarIntOK) SetPayload(payload *model.StationConfigVarInt) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStationConfigVarIntOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetStationConfigVarIntOK) GetStationConfigVarIntResponder() {}

// GetStationConfigVarIntNotFoundCode is the HTTP code returned for type GetStationConfigVarIntNotFound
const GetStationConfigVarIntNotFoundCode int = 404

/*GetStationConfigVarIntNotFound Not found

swagger:response getStationConfigVarIntNotFound
*/
type GetStationConfigVarIntNotFound struct {
}

// NewGetStationConfigVarIntNotFound creates GetStationConfigVarIntNotFound with default headers values
func NewGetStationConfigVarIntNotFound() *GetStationConfigVarIntNotFound {

	return &GetStationConfigVarIntNotFound{}
}

// WriteResponse to the client
func (o *GetStationConfigVarIntNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

func (o *GetStationConfigVarIntNotFound) GetStationConfigVarIntResponder() {}

// GetStationConfigVarIntInternalServerErrorCode is the HTTP code returned for type GetStationConfigVarIntInternalServerError
const GetStationConfigVarIntInternalServerErrorCode int = 500

/*GetStationConfigVarIntInternalServerError Internal error

swagger:response getStationConfigVarIntInternalServerError
*/
type GetStationConfigVarIntInternalServerError struct {
}

// NewGetStationConfigVarIntInternalServerError creates GetStationConfigVarIntInternalServerError with default headers values
func NewGetStationConfigVarIntInternalServerError() *GetStationConfigVarIntInternalServerError {

	return &GetStationConfigVarIntInternalServerError{}
}

// WriteResponse to the client
func (o *GetStationConfigVarIntInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}

func (o *GetStationConfigVarIntInternalServerError) GetStationConfigVarIntResponder() {}

type GetStationConfigVarIntNotImplementedResponder struct {
	middleware.Responder
}

func (*GetStationConfigVarIntNotImplementedResponder) GetStationConfigVarIntResponder() {}

func GetStationConfigVarIntNotImplemented() GetStationConfigVarIntResponder {
	return &GetStationConfigVarIntNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetStationConfigVarInt has not yet been implemented",
		),
	}
}

type GetStationConfigVarIntResponder interface {
	middleware.Responder
	GetStationConfigVarIntResponder()
}
