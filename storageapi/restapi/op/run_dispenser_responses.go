// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
)

// RunDispenserNoContentCode is the HTTP code returned for type RunDispenserNoContent
const RunDispenserNoContentCode int = 204

/*RunDispenserNoContent OK

swagger:response runDispenserNoContent
*/
type RunDispenserNoContent struct {
}

// NewRunDispenserNoContent creates RunDispenserNoContent with default headers values
func NewRunDispenserNoContent() *RunDispenserNoContent {

	return &RunDispenserNoContent{}
}

// WriteResponse to the client
func (o *RunDispenserNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *RunDispenserNoContent) RunDispenserResponder() {}

// RunDispenserNotFoundCode is the HTTP code returned for type RunDispenserNotFound
const RunDispenserNotFoundCode int = 404

/*RunDispenserNotFound not found

swagger:response runDispenserNotFound
*/
type RunDispenserNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewRunDispenserNotFound creates RunDispenserNotFound with default headers values
func NewRunDispenserNotFound() *RunDispenserNotFound {

	return &RunDispenserNotFound{}
}

// WithPayload adds the payload to the run dispenser not found response
func (o *RunDispenserNotFound) WithPayload(payload string) *RunDispenserNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the run dispenser not found response
func (o *RunDispenserNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RunDispenserNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *RunDispenserNotFound) RunDispenserResponder() {}

// RunDispenserInternalServerErrorCode is the HTTP code returned for type RunDispenserInternalServerError
const RunDispenserInternalServerErrorCode int = 500

/*RunDispenserInternalServerError internal error

swagger:response runDispenserInternalServerError
*/
type RunDispenserInternalServerError struct {
}

// NewRunDispenserInternalServerError creates RunDispenserInternalServerError with default headers values
func NewRunDispenserInternalServerError() *RunDispenserInternalServerError {

	return &RunDispenserInternalServerError{}
}

// WriteResponse to the client
func (o *RunDispenserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}

func (o *RunDispenserInternalServerError) RunDispenserResponder() {}

type RunDispenserNotImplementedResponder struct {
	middleware.Responder
}

func (*RunDispenserNotImplementedResponder) RunDispenserResponder() {}

func RunDispenserNotImplemented() RunDispenserResponder {
	return &RunDispenserNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.RunDispenser has not yet been implemented",
		),
	}
}

type RunDispenserResponder interface {
	middleware.Responder
	RunDispenserResponder()
}
