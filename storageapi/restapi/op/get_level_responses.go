// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
)

// GetLevelOKCode is the HTTP code returned for type GetLevelOK
const GetLevelOKCode int = 200

/*GetLevelOK OK

swagger:response getLevelOK
*/
type GetLevelOK struct {

	/*
	  In: Body
	*/
	Payload *GetLevelOKBody `json:"body,omitempty"`
}

// NewGetLevelOK creates GetLevelOK with default headers values
func NewGetLevelOK() *GetLevelOK {

	return &GetLevelOK{}
}

// WithPayload adds the payload to the get level o k response
func (o *GetLevelOK) WithPayload(payload *GetLevelOKBody) *GetLevelOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get level o k response
func (o *GetLevelOK) SetPayload(payload *GetLevelOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLevelOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetLevelOK) GetLevelResponder() {}

// GetLevelNoContentCode is the HTTP code returned for type GetLevelNoContent
const GetLevelNoContentCode int = 204

/*GetLevelNoContent OK

swagger:response getLevelNoContent
*/
type GetLevelNoContent struct {
}

// NewGetLevelNoContent creates GetLevelNoContent with default headers values
func NewGetLevelNoContent() *GetLevelNoContent {

	return &GetLevelNoContent{}
}

// WriteResponse to the client
func (o *GetLevelNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *GetLevelNoContent) GetLevelResponder() {}

// GetLevelNotFoundCode is the HTTP code returned for type GetLevelNotFound
const GetLevelNotFoundCode int = 404

/*GetLevelNotFound not found

swagger:response getLevelNotFound
*/
type GetLevelNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewGetLevelNotFound creates GetLevelNotFound with default headers values
func NewGetLevelNotFound() *GetLevelNotFound {

	return &GetLevelNotFound{}
}

// WithPayload adds the payload to the get level not found response
func (o *GetLevelNotFound) WithPayload(payload string) *GetLevelNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get level not found response
func (o *GetLevelNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLevelNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *GetLevelNotFound) GetLevelResponder() {}

// GetLevelInternalServerErrorCode is the HTTP code returned for type GetLevelInternalServerError
const GetLevelInternalServerErrorCode int = 500

/*GetLevelInternalServerError internal error

swagger:response getLevelInternalServerError
*/
type GetLevelInternalServerError struct {
}

// NewGetLevelInternalServerError creates GetLevelInternalServerError with default headers values
func NewGetLevelInternalServerError() *GetLevelInternalServerError {

	return &GetLevelInternalServerError{}
}

// WriteResponse to the client
func (o *GetLevelInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}

func (o *GetLevelInternalServerError) GetLevelResponder() {}

type GetLevelNotImplementedResponder struct {
	middleware.Responder
}

func (*GetLevelNotImplementedResponder) GetLevelResponder() {}

func GetLevelNotImplemented() GetLevelResponder {
	return &GetLevelNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetLevel has not yet been implemented",
		),
	}
}

type GetLevelResponder interface {
	middleware.Responder
	GetLevelResponder()
}
