// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
)

// RunArduinoNoContentCode is the HTTP code returned for type RunArduinoNoContent
const RunArduinoNoContentCode int = 204

/*RunArduinoNoContent OK

swagger:response runArduinoNoContent
*/
type RunArduinoNoContent struct {
}

// NewRunArduinoNoContent creates RunArduinoNoContent with default headers values
func NewRunArduinoNoContent() *RunArduinoNoContent {

	return &RunArduinoNoContent{}
}

// WriteResponse to the client
func (o *RunArduinoNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

func (o *RunArduinoNoContent) RunArduinoResponder() {}

// RunArduinoNotFoundCode is the HTTP code returned for type RunArduinoNotFound
const RunArduinoNotFoundCode int = 404

/*RunArduinoNotFound not found

swagger:response runArduinoNotFound
*/
type RunArduinoNotFound struct {

	/*
	  In: Body
	*/
	Payload string `json:"body,omitempty"`
}

// NewRunArduinoNotFound creates RunArduinoNotFound with default headers values
func NewRunArduinoNotFound() *RunArduinoNotFound {

	return &RunArduinoNotFound{}
}

// WithPayload adds the payload to the run arduino not found response
func (o *RunArduinoNotFound) WithPayload(payload string) *RunArduinoNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the run arduino not found response
func (o *RunArduinoNotFound) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RunArduinoNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *RunArduinoNotFound) RunArduinoResponder() {}

// RunArduinoInternalServerErrorCode is the HTTP code returned for type RunArduinoInternalServerError
const RunArduinoInternalServerErrorCode int = 500

/*RunArduinoInternalServerError internal error

swagger:response runArduinoInternalServerError
*/
type RunArduinoInternalServerError struct {
}

// NewRunArduinoInternalServerError creates RunArduinoInternalServerError with default headers values
func NewRunArduinoInternalServerError() *RunArduinoInternalServerError {

	return &RunArduinoInternalServerError{}
}

// WriteResponse to the client
func (o *RunArduinoInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}

func (o *RunArduinoInternalServerError) RunArduinoResponder() {}

type RunArduinoNotImplementedResponder struct {
	middleware.Responder
}

func (*RunArduinoNotImplementedResponder) RunArduinoResponder() {}

func RunArduinoNotImplemented() RunArduinoResponder {
	return &RunArduinoNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.RunArduino has not yet been implemented",
		),
	}
}

type RunArduinoResponder interface {
	middleware.Responder
	RunArduinoResponder()
}
