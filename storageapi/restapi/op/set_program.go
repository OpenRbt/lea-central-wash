// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// SetProgramHandlerFunc turns a function with the right signature into a set program handler
type SetProgramHandlerFunc func(SetProgramParams) SetProgramResponder

// Handle executing the request and returning a response
func (fn SetProgramHandlerFunc) Handle(params SetProgramParams) SetProgramResponder {
	return fn(params)
}

// SetProgramHandler interface for that can handle valid set program params
type SetProgramHandler interface {
	Handle(SetProgramParams) SetProgramResponder
}

// NewSetProgram creates a new http.Handler for the set program operation
func NewSetProgram(ctx *middleware.Context, handler SetProgramHandler) *SetProgram {
	return &SetProgram{Context: ctx, Handler: handler}
}

/*SetProgram swagger:route POST /set-program setProgram

SetProgram set program API

*/
type SetProgram struct {
	Context *middleware.Context
	Handler SetProgramHandler
}

func (o *SetProgram) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewSetProgramParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
