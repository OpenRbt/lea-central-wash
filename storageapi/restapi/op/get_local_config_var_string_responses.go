// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/DiaElectronics/lea-central-wash/storageapi/model"
)

// GetLocalConfigVarStringOKCode is the HTTP code returned for type GetLocalConfigVarStringOK
const GetLocalConfigVarStringOKCode int = 200

/*
GetLocalConfigVarStringOK OK

swagger:response getLocalConfigVarStringOK
*/
type GetLocalConfigVarStringOK struct {

	/*
	  In: Body
	*/
	Payload *model.LocalConfigVarString `json:"body,omitempty"`
}

// NewGetLocalConfigVarStringOK creates GetLocalConfigVarStringOK with default headers values
func NewGetLocalConfigVarStringOK() *GetLocalConfigVarStringOK {

	return &GetLocalConfigVarStringOK{}
}

// WithPayload adds the payload to the get local config var string o k response
func (o *GetLocalConfigVarStringOK) WithPayload(payload *model.LocalConfigVarString) *GetLocalConfigVarStringOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get local config var string o k response
func (o *GetLocalConfigVarStringOK) SetPayload(payload *model.LocalConfigVarString) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetLocalConfigVarStringOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *GetLocalConfigVarStringOK) GetLocalConfigVarStringResponder() {}

// GetLocalConfigVarStringNotFoundCode is the HTTP code returned for type GetLocalConfigVarStringNotFound
const GetLocalConfigVarStringNotFoundCode int = 404

/*
GetLocalConfigVarStringNotFound Not found

swagger:response getLocalConfigVarStringNotFound
*/
type GetLocalConfigVarStringNotFound struct {
}

// NewGetLocalConfigVarStringNotFound creates GetLocalConfigVarStringNotFound with default headers values
func NewGetLocalConfigVarStringNotFound() *GetLocalConfigVarStringNotFound {

	return &GetLocalConfigVarStringNotFound{}
}

// WriteResponse to the client
func (o *GetLocalConfigVarStringNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

func (o *GetLocalConfigVarStringNotFound) GetLocalConfigVarStringResponder() {}

// GetLocalConfigVarStringInternalServerErrorCode is the HTTP code returned for type GetLocalConfigVarStringInternalServerError
const GetLocalConfigVarStringInternalServerErrorCode int = 500

/*
GetLocalConfigVarStringInternalServerError Internal error

swagger:response getLocalConfigVarStringInternalServerError
*/
type GetLocalConfigVarStringInternalServerError struct {
}

// NewGetLocalConfigVarStringInternalServerError creates GetLocalConfigVarStringInternalServerError with default headers values
func NewGetLocalConfigVarStringInternalServerError() *GetLocalConfigVarStringInternalServerError {

	return &GetLocalConfigVarStringInternalServerError{}
}

// WriteResponse to the client
func (o *GetLocalConfigVarStringInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}

func (o *GetLocalConfigVarStringInternalServerError) GetLocalConfigVarStringResponder() {}

type GetLocalConfigVarStringNotImplementedResponder struct {
	middleware.Responder
}

func (*GetLocalConfigVarStringNotImplementedResponder) GetLocalConfigVarStringResponder() {}

func GetLocalConfigVarStringNotImplemented() GetLocalConfigVarStringResponder {
	return &GetLocalConfigVarStringNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.GetLocalConfigVarString has not yet been implemented",
		),
	}
}

type GetLocalConfigVarStringResponder interface {
	middleware.Responder
	GetLocalConfigVarStringResponder()
}
