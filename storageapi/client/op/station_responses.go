// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	model "github.com/DiaElectronics/lea-central-wash/storageapi/model"
)

// StationReader is a Reader for the Station structure.
type StationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewStationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewStationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewStationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewStationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStationOK creates a StationOK with default headers values
func NewStationOK() *StationOK {
	return &StationOK{}
}

/*StationOK handles this case with default header values.

OK
*/
type StationOK struct {
	Payload *model.StationConfig
}

func (o *StationOK) Error() string {
	return fmt.Sprintf("[POST /station][%d] stationOK  %+v", 200, o.Payload)
}

func (o *StationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.StationConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStationUnauthorized creates a StationUnauthorized with default headers values
func NewStationUnauthorized() *StationUnauthorized {
	return &StationUnauthorized{}
}

/*StationUnauthorized handles this case with default header values.

Access denied. It will happen when you try to change the ID at the station online.
*/
type StationUnauthorized struct {
}

func (o *StationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /station][%d] stationUnauthorized ", 401)
}

func (o *StationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStationNotFound creates a StationNotFound with default headers values
func NewStationNotFound() *StationNotFound {
	return &StationNotFound{}
}

/*StationNotFound handles this case with default header values.

not found
*/
type StationNotFound struct {
}

func (o *StationNotFound) Error() string {
	return fmt.Sprintf("[POST /station][%d] stationNotFound ", 404)
}

func (o *StationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStationInternalServerError creates a StationInternalServerError with default headers values
func NewStationInternalServerError() *StationInternalServerError {
	return &StationInternalServerError{}
}

/*StationInternalServerError handles this case with default header values.

internal error
*/
type StationInternalServerError struct {
}

func (o *StationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /station][%d] stationInternalServerError ", 500)
}

func (o *StationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*StationBody station body
swagger:model StationBody
*/
type StationBody struct {

	// id
	// Required: true
	ID *int64 `json:"id"`
}

// Validate validates this station body
func (o *StationBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *StationBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("args"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *StationBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StationBody) UnmarshalBinary(b []byte) error {
	var res StationBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
