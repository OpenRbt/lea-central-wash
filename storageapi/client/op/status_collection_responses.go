// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/DiaElectronics/lea-central-wash/storageapi/model"
)

// StatusCollectionReader is a Reader for the StatusCollection structure.
type StatusCollectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StatusCollectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStatusCollectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewStatusCollectionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStatusCollectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStatusCollectionOK creates a StatusCollectionOK with default headers values
func NewStatusCollectionOK() *StatusCollectionOK {
	return &StatusCollectionOK{}
}

/* StatusCollectionOK describes a response with status code 200, with default header values.

OK
*/
type StatusCollectionOK struct {
	Payload *model.StatusCollectionReport
}

func (o *StatusCollectionOK) Error() string {
	return fmt.Sprintf("[GET /status-collection][%d] statusCollectionOK  %+v", 200, o.Payload)
}
func (o *StatusCollectionOK) GetPayload() *model.StatusCollectionReport {
	return o.Payload
}

func (o *StatusCollectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.StatusCollectionReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStatusCollectionUnauthorized creates a StatusCollectionUnauthorized with default headers values
func NewStatusCollectionUnauthorized() *StatusCollectionUnauthorized {
	return &StatusCollectionUnauthorized{}
}

/* StatusCollectionUnauthorized describes a response with status code 401, with default header values.

PIN is missing or invalid
*/
type StatusCollectionUnauthorized struct {
}

func (o *StatusCollectionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /status-collection][%d] statusCollectionUnauthorized ", 401)
}

func (o *StatusCollectionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStatusCollectionInternalServerError creates a StatusCollectionInternalServerError with default headers values
func NewStatusCollectionInternalServerError() *StatusCollectionInternalServerError {
	return &StatusCollectionInternalServerError{}
}

/* StatusCollectionInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type StatusCollectionInternalServerError struct {
}

func (o *StatusCollectionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /status-collection][%d] statusCollectionInternalServerError ", 500)
}

func (o *StatusCollectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
