// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	model "github.com/DiaElectronics/lea-central-wash/storageapi/model"
)

// StationByHashReader is a Reader for the StationByHash structure.
type StationByHashReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StationByHashReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewStationByHashOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewStationByHashInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStationByHashOK creates a StationByHashOK with default headers values
func NewStationByHashOK() *StationByHashOK {
	return &StationByHashOK{}
}

/*StationByHashOK handles this case with default header values.

OK
*/
type StationByHashOK struct {
	Payload int64
}

func (o *StationByHashOK) Error() string {
	return fmt.Sprintf("[POST /station-by-hash][%d] stationByHashOK  %+v", 200, o.Payload)
}

func (o *StationByHashOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStationByHashInternalServerError creates a StationByHashInternalServerError with default headers values
func NewStationByHashInternalServerError() *StationByHashInternalServerError {
	return &StationByHashInternalServerError{}
}

/*StationByHashInternalServerError handles this case with default header values.

internal error
*/
type StationByHashInternalServerError struct {
}

func (o *StationByHashInternalServerError) Error() string {
	return fmt.Sprintf("[POST /station-by-hash][%d] stationByHashInternalServerError ", 500)
}

func (o *StationByHashInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*StationByHashBody station by hash body
swagger:model StationByHashBody
*/
type StationByHashBody struct {

	// hash
	// Required: true
	Hash model.Hash `json:"hash"`
}

// Validate validates this station by hash body
func (o *StationByHashBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHash(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *StationByHashBody) validateHash(formats strfmt.Registry) error {

	if err := o.Hash.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("args" + "." + "hash")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *StationByHashBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StationByHashBody) UnmarshalBinary(b []byte) error {
	var res StationByHashBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
