// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	model "github.com/DiaElectronics/lea-central-wash/storageapi/model"
)

// CardReaderConfigByHashReader is a Reader for the CardReaderConfigByHash structure.
type CardReaderConfigByHashReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CardReaderConfigByHashReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCardReaderConfigByHashOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewCardReaderConfigByHashNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCardReaderConfigByHashInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCardReaderConfigByHashOK creates a CardReaderConfigByHashOK with default headers values
func NewCardReaderConfigByHashOK() *CardReaderConfigByHashOK {
	return &CardReaderConfigByHashOK{}
}

/*CardReaderConfigByHashOK handles this case with default header values.

OK
*/
type CardReaderConfigByHashOK struct {
	Payload *model.CardReaderConfig
}

func (o *CardReaderConfigByHashOK) Error() string {
	return fmt.Sprintf("[POST /card-reader-config-by-hash][%d] cardReaderConfigByHashOK  %+v", 200, o.Payload)
}

func (o *CardReaderConfigByHashOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.CardReaderConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCardReaderConfigByHashNotFound creates a CardReaderConfigByHashNotFound with default headers values
func NewCardReaderConfigByHashNotFound() *CardReaderConfigByHashNotFound {
	return &CardReaderConfigByHashNotFound{}
}

/*CardReaderConfigByHashNotFound handles this case with default header values.

not found
*/
type CardReaderConfigByHashNotFound struct {
}

func (o *CardReaderConfigByHashNotFound) Error() string {
	return fmt.Sprintf("[POST /card-reader-config-by-hash][%d] cardReaderConfigByHashNotFound ", 404)
}

func (o *CardReaderConfigByHashNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCardReaderConfigByHashInternalServerError creates a CardReaderConfigByHashInternalServerError with default headers values
func NewCardReaderConfigByHashInternalServerError() *CardReaderConfigByHashInternalServerError {
	return &CardReaderConfigByHashInternalServerError{}
}

/*CardReaderConfigByHashInternalServerError handles this case with default header values.

internal error
*/
type CardReaderConfigByHashInternalServerError struct {
}

func (o *CardReaderConfigByHashInternalServerError) Error() string {
	return fmt.Sprintf("[POST /card-reader-config-by-hash][%d] cardReaderConfigByHashInternalServerError ", 500)
}

func (o *CardReaderConfigByHashInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*CardReaderConfigByHashBody card reader config by hash body
swagger:model CardReaderConfigByHashBody
*/
type CardReaderConfigByHashBody struct {

	// hash
	// Required: true
	Hash model.Hash `json:"hash"`
}

// Validate validates this card reader config by hash body
func (o *CardReaderConfigByHashBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHash(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CardReaderConfigByHashBody) validateHash(formats strfmt.Registry) error {

	if err := o.Hash.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("args" + "." + "hash")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CardReaderConfigByHashBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CardReaderConfigByHashBody) UnmarshalBinary(b []byte) error {
	var res CardReaderConfigByHashBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
