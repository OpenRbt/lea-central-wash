// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/DiaElectronics/lea-central-wash/storageapi/model"
)

// GetLocalConfigVarStringReader is a Reader for the GetLocalConfigVarString structure.
type GetLocalConfigVarStringReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLocalConfigVarStringReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLocalConfigVarStringOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetLocalConfigVarStringNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLocalConfigVarStringInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetLocalConfigVarStringOK creates a GetLocalConfigVarStringOK with default headers values
func NewGetLocalConfigVarStringOK() *GetLocalConfigVarStringOK {
	return &GetLocalConfigVarStringOK{}
}

/*
GetLocalConfigVarStringOK describes a response with status code 200, with default header values.

OK
*/
type GetLocalConfigVarStringOK struct {
	Payload *model.LocalConfigVarString
}

// IsSuccess returns true when this get local config var string o k response has a 2xx status code
func (o *GetLocalConfigVarStringOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get local config var string o k response has a 3xx status code
func (o *GetLocalConfigVarStringOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get local config var string o k response has a 4xx status code
func (o *GetLocalConfigVarStringOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get local config var string o k response has a 5xx status code
func (o *GetLocalConfigVarStringOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get local config var string o k response a status code equal to that given
func (o *GetLocalConfigVarStringOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetLocalConfigVarStringOK) Error() string {
	return fmt.Sprintf("[POST /get-local-config-var-string][%d] getLocalConfigVarStringOK  %+v", 200, o.Payload)
}

func (o *GetLocalConfigVarStringOK) String() string {
	return fmt.Sprintf("[POST /get-local-config-var-string][%d] getLocalConfigVarStringOK  %+v", 200, o.Payload)
}

func (o *GetLocalConfigVarStringOK) GetPayload() *model.LocalConfigVarString {
	return o.Payload
}

func (o *GetLocalConfigVarStringOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.LocalConfigVarString)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocalConfigVarStringNotFound creates a GetLocalConfigVarStringNotFound with default headers values
func NewGetLocalConfigVarStringNotFound() *GetLocalConfigVarStringNotFound {
	return &GetLocalConfigVarStringNotFound{}
}

/*
GetLocalConfigVarStringNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetLocalConfigVarStringNotFound struct {
}

// IsSuccess returns true when this get local config var string not found response has a 2xx status code
func (o *GetLocalConfigVarStringNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get local config var string not found response has a 3xx status code
func (o *GetLocalConfigVarStringNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get local config var string not found response has a 4xx status code
func (o *GetLocalConfigVarStringNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get local config var string not found response has a 5xx status code
func (o *GetLocalConfigVarStringNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get local config var string not found response a status code equal to that given
func (o *GetLocalConfigVarStringNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetLocalConfigVarStringNotFound) Error() string {
	return fmt.Sprintf("[POST /get-local-config-var-string][%d] getLocalConfigVarStringNotFound ", 404)
}

func (o *GetLocalConfigVarStringNotFound) String() string {
	return fmt.Sprintf("[POST /get-local-config-var-string][%d] getLocalConfigVarStringNotFound ", 404)
}

func (o *GetLocalConfigVarStringNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLocalConfigVarStringInternalServerError creates a GetLocalConfigVarStringInternalServerError with default headers values
func NewGetLocalConfigVarStringInternalServerError() *GetLocalConfigVarStringInternalServerError {
	return &GetLocalConfigVarStringInternalServerError{}
}

/*
GetLocalConfigVarStringInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type GetLocalConfigVarStringInternalServerError struct {
}

// IsSuccess returns true when this get local config var string internal server error response has a 2xx status code
func (o *GetLocalConfigVarStringInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get local config var string internal server error response has a 3xx status code
func (o *GetLocalConfigVarStringInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get local config var string internal server error response has a 4xx status code
func (o *GetLocalConfigVarStringInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get local config var string internal server error response has a 5xx status code
func (o *GetLocalConfigVarStringInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get local config var string internal server error response a status code equal to that given
func (o *GetLocalConfigVarStringInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetLocalConfigVarStringInternalServerError) Error() string {
	return fmt.Sprintf("[POST /get-local-config-var-string][%d] getLocalConfigVarStringInternalServerError ", 500)
}

func (o *GetLocalConfigVarStringInternalServerError) String() string {
	return fmt.Sprintf("[POST /get-local-config-var-string][%d] getLocalConfigVarStringInternalServerError ", 500)
}

func (o *GetLocalConfigVarStringInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
GetLocalConfigVarStringBody ArgGetLocalConfigVar
swagger:model GetLocalConfigVarStringBody
*/
type GetLocalConfigVarStringBody struct {

	// name
	Name string `json:"name,omitempty"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *GetLocalConfigVarStringBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// name
		Name string `json:"name,omitempty"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.Name = props.Name
	return nil
}

// Validate validates this get local config var string body
func (o *GetLocalConfigVarStringBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get local config var string body based on context it is used
func (o *GetLocalConfigVarStringBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetLocalConfigVarStringBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetLocalConfigVarStringBody) UnmarshalBinary(b []byte) error {
	var res GetLocalConfigVarStringBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
