// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OpenStationReader is a Reader for the OpenStation structure.
type OpenStationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OpenStationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewOpenStationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewOpenStationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOpenStationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOpenStationNoContent creates a OpenStationNoContent with default headers values
func NewOpenStationNoContent() *OpenStationNoContent {
	return &OpenStationNoContent{}
}

/*
OpenStationNoContent describes a response with status code 204, with default header values.

OK
*/
type OpenStationNoContent struct {
}

// IsSuccess returns true when this open station no content response has a 2xx status code
func (o *OpenStationNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this open station no content response has a 3xx status code
func (o *OpenStationNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this open station no content response has a 4xx status code
func (o *OpenStationNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this open station no content response has a 5xx status code
func (o *OpenStationNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this open station no content response a status code equal to that given
func (o *OpenStationNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *OpenStationNoContent) Error() string {
	return fmt.Sprintf("[POST /open-station][%d] openStationNoContent ", 204)
}

func (o *OpenStationNoContent) String() string {
	return fmt.Sprintf("[POST /open-station][%d] openStationNoContent ", 204)
}

func (o *OpenStationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOpenStationNotFound creates a OpenStationNotFound with default headers values
func NewOpenStationNotFound() *OpenStationNotFound {
	return &OpenStationNotFound{}
}

/*
OpenStationNotFound describes a response with status code 404, with default header values.

not found
*/
type OpenStationNotFound struct {
}

// IsSuccess returns true when this open station not found response has a 2xx status code
func (o *OpenStationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this open station not found response has a 3xx status code
func (o *OpenStationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this open station not found response has a 4xx status code
func (o *OpenStationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this open station not found response has a 5xx status code
func (o *OpenStationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this open station not found response a status code equal to that given
func (o *OpenStationNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *OpenStationNotFound) Error() string {
	return fmt.Sprintf("[POST /open-station][%d] openStationNotFound ", 404)
}

func (o *OpenStationNotFound) String() string {
	return fmt.Sprintf("[POST /open-station][%d] openStationNotFound ", 404)
}

func (o *OpenStationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOpenStationInternalServerError creates a OpenStationInternalServerError with default headers values
func NewOpenStationInternalServerError() *OpenStationInternalServerError {
	return &OpenStationInternalServerError{}
}

/*
OpenStationInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type OpenStationInternalServerError struct {
}

// IsSuccess returns true when this open station internal server error response has a 2xx status code
func (o *OpenStationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this open station internal server error response has a 3xx status code
func (o *OpenStationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this open station internal server error response has a 4xx status code
func (o *OpenStationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this open station internal server error response has a 5xx status code
func (o *OpenStationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this open station internal server error response a status code equal to that given
func (o *OpenStationInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *OpenStationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /open-station][%d] openStationInternalServerError ", 500)
}

func (o *OpenStationInternalServerError) String() string {
	return fmt.Sprintf("[POST /open-station][%d] openStationInternalServerError ", 500)
}

func (o *OpenStationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
OpenStationBody ArgOpenStation
swagger:model OpenStationBody
*/
type OpenStationBody struct {

	// station ID
	// Required: true
	StationID *int64 `json:"stationID"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *OpenStationBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// station ID
		// Required: true
		StationID *int64 `json:"stationID"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.StationID = props.StationID
	return nil
}

// Validate validates this open station body
func (o *OpenStationBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStationID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *OpenStationBody) validateStationID(formats strfmt.Registry) error {

	if err := validate.Required("args"+"."+"stationID", "body", o.StationID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this open station body based on context it is used
func (o *OpenStationBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *OpenStationBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OpenStationBody) UnmarshalBinary(b []byte) error {
	var res OpenStationBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
