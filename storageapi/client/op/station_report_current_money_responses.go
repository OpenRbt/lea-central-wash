// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/OpenRbt/lea-central-wash/storageapi/model"
)

// StationReportCurrentMoneyReader is a Reader for the StationReportCurrentMoney structure.
type StationReportCurrentMoneyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StationReportCurrentMoneyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStationReportCurrentMoneyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewStationReportCurrentMoneyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStationReportCurrentMoneyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /station-report-current-money] stationReportCurrentMoney", response, response.Code())
	}
}

// NewStationReportCurrentMoneyOK creates a StationReportCurrentMoneyOK with default headers values
func NewStationReportCurrentMoneyOK() *StationReportCurrentMoneyOK {
	return &StationReportCurrentMoneyOK{}
}

/*
StationReportCurrentMoneyOK describes a response with status code 200, with default header values.

OK
*/
type StationReportCurrentMoneyOK struct {
	Payload *model.StationReport
}

// IsSuccess returns true when this station report current money o k response has a 2xx status code
func (o *StationReportCurrentMoneyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this station report current money o k response has a 3xx status code
func (o *StationReportCurrentMoneyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this station report current money o k response has a 4xx status code
func (o *StationReportCurrentMoneyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this station report current money o k response has a 5xx status code
func (o *StationReportCurrentMoneyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this station report current money o k response a status code equal to that given
func (o *StationReportCurrentMoneyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the station report current money o k response
func (o *StationReportCurrentMoneyOK) Code() int {
	return 200
}

func (o *StationReportCurrentMoneyOK) Error() string {
	return fmt.Sprintf("[POST /station-report-current-money][%d] stationReportCurrentMoneyOK  %+v", 200, o.Payload)
}

func (o *StationReportCurrentMoneyOK) String() string {
	return fmt.Sprintf("[POST /station-report-current-money][%d] stationReportCurrentMoneyOK  %+v", 200, o.Payload)
}

func (o *StationReportCurrentMoneyOK) GetPayload() *model.StationReport {
	return o.Payload
}

func (o *StationReportCurrentMoneyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.StationReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStationReportCurrentMoneyNotFound creates a StationReportCurrentMoneyNotFound with default headers values
func NewStationReportCurrentMoneyNotFound() *StationReportCurrentMoneyNotFound {
	return &StationReportCurrentMoneyNotFound{}
}

/*
StationReportCurrentMoneyNotFound describes a response with status code 404, with default header values.

not found
*/
type StationReportCurrentMoneyNotFound struct {
}

// IsSuccess returns true when this station report current money not found response has a 2xx status code
func (o *StationReportCurrentMoneyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this station report current money not found response has a 3xx status code
func (o *StationReportCurrentMoneyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this station report current money not found response has a 4xx status code
func (o *StationReportCurrentMoneyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this station report current money not found response has a 5xx status code
func (o *StationReportCurrentMoneyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this station report current money not found response a status code equal to that given
func (o *StationReportCurrentMoneyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the station report current money not found response
func (o *StationReportCurrentMoneyNotFound) Code() int {
	return 404
}

func (o *StationReportCurrentMoneyNotFound) Error() string {
	return fmt.Sprintf("[POST /station-report-current-money][%d] stationReportCurrentMoneyNotFound ", 404)
}

func (o *StationReportCurrentMoneyNotFound) String() string {
	return fmt.Sprintf("[POST /station-report-current-money][%d] stationReportCurrentMoneyNotFound ", 404)
}

func (o *StationReportCurrentMoneyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStationReportCurrentMoneyInternalServerError creates a StationReportCurrentMoneyInternalServerError with default headers values
func NewStationReportCurrentMoneyInternalServerError() *StationReportCurrentMoneyInternalServerError {
	return &StationReportCurrentMoneyInternalServerError{}
}

/*
StationReportCurrentMoneyInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type StationReportCurrentMoneyInternalServerError struct {
}

// IsSuccess returns true when this station report current money internal server error response has a 2xx status code
func (o *StationReportCurrentMoneyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this station report current money internal server error response has a 3xx status code
func (o *StationReportCurrentMoneyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this station report current money internal server error response has a 4xx status code
func (o *StationReportCurrentMoneyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this station report current money internal server error response has a 5xx status code
func (o *StationReportCurrentMoneyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this station report current money internal server error response a status code equal to that given
func (o *StationReportCurrentMoneyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the station report current money internal server error response
func (o *StationReportCurrentMoneyInternalServerError) Code() int {
	return 500
}

func (o *StationReportCurrentMoneyInternalServerError) Error() string {
	return fmt.Sprintf("[POST /station-report-current-money][%d] stationReportCurrentMoneyInternalServerError ", 500)
}

func (o *StationReportCurrentMoneyInternalServerError) String() string {
	return fmt.Sprintf("[POST /station-report-current-money][%d] stationReportCurrentMoneyInternalServerError ", 500)
}

func (o *StationReportCurrentMoneyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
StationReportCurrentMoneyBody ArgStationReportCurrentMoney
swagger:model StationReportCurrentMoneyBody
*/
type StationReportCurrentMoneyBody struct {

	// id
	// Required: true
	ID *int64 `json:"id"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *StationReportCurrentMoneyBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// id
		// Required: true
		ID *int64 `json:"id"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.ID = props.ID
	return nil
}

// Validate validates this station report current money body
func (o *StationReportCurrentMoneyBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *StationReportCurrentMoneyBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("args"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this station report current money body based on context it is used
func (o *StationReportCurrentMoneyBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *StationReportCurrentMoneyBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StationReportCurrentMoneyBody) UnmarshalBinary(b []byte) error {
	var res StationReportCurrentMoneyBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
