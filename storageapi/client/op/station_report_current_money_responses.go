// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	model "github.com/DiaElectronics/lea-central-wash/storageapi/model"
)

// StationReportCurrentMoneyReader is a Reader for the StationReportCurrentMoney structure.
type StationReportCurrentMoneyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StationReportCurrentMoneyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewStationReportCurrentMoneyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewStationReportCurrentMoneyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewStationReportCurrentMoneyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStationReportCurrentMoneyOK creates a StationReportCurrentMoneyOK with default headers values
func NewStationReportCurrentMoneyOK() *StationReportCurrentMoneyOK {
	return &StationReportCurrentMoneyOK{}
}

/*StationReportCurrentMoneyOK handles this case with default header values.

OK
*/
type StationReportCurrentMoneyOK struct {
	Payload *model.StationReport
}

func (o *StationReportCurrentMoneyOK) Error() string {
	return fmt.Sprintf("[POST /station-report-current-money][%d] stationReportCurrentMoneyOK  %+v", 200, o.Payload)
}

func (o *StationReportCurrentMoneyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.StationReport)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStationReportCurrentMoneyNotFound creates a StationReportCurrentMoneyNotFound with default headers values
func NewStationReportCurrentMoneyNotFound() *StationReportCurrentMoneyNotFound {
	return &StationReportCurrentMoneyNotFound{}
}

/*StationReportCurrentMoneyNotFound handles this case with default header values.

not found
*/
type StationReportCurrentMoneyNotFound struct {
}

func (o *StationReportCurrentMoneyNotFound) Error() string {
	return fmt.Sprintf("[POST /station-report-current-money][%d] stationReportCurrentMoneyNotFound ", 404)
}

func (o *StationReportCurrentMoneyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStationReportCurrentMoneyInternalServerError creates a StationReportCurrentMoneyInternalServerError with default headers values
func NewStationReportCurrentMoneyInternalServerError() *StationReportCurrentMoneyInternalServerError {
	return &StationReportCurrentMoneyInternalServerError{}
}

/*StationReportCurrentMoneyInternalServerError handles this case with default header values.

internal error
*/
type StationReportCurrentMoneyInternalServerError struct {
}

func (o *StationReportCurrentMoneyInternalServerError) Error() string {
	return fmt.Sprintf("[POST /station-report-current-money][%d] stationReportCurrentMoneyInternalServerError ", 500)
}

func (o *StationReportCurrentMoneyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*StationReportCurrentMoneyBody station report current money body
swagger:model StationReportCurrentMoneyBody
*/
type StationReportCurrentMoneyBody struct {

	// id
	// Required: true
	ID *int64 `json:"id"`
}

// Validate validates this station report current money body
func (o *StationReportCurrentMoneyBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *StationReportCurrentMoneyBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("args"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *StationReportCurrentMoneyBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StationReportCurrentMoneyBody) UnmarshalBinary(b []byte) error {
	var res StationReportCurrentMoneyBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
