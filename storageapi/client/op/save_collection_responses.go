// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// SaveCollectionReader is a Reader for the SaveCollection structure.
type SaveCollectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SaveCollectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewSaveCollectionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewSaveCollectionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSaveCollectionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSaveCollectionNoContent creates a SaveCollectionNoContent with default headers values
func NewSaveCollectionNoContent() *SaveCollectionNoContent {
	return &SaveCollectionNoContent{}
}

/*SaveCollectionNoContent handles this case with default header values.

OK
*/
type SaveCollectionNoContent struct {
}

func (o *SaveCollectionNoContent) Error() string {
	return fmt.Sprintf("[POST /save-collection][%d] saveCollectionNoContent ", 204)
}

func (o *SaveCollectionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveCollectionNotFound creates a SaveCollectionNotFound with default headers values
func NewSaveCollectionNotFound() *SaveCollectionNotFound {
	return &SaveCollectionNotFound{}
}

/*SaveCollectionNotFound handles this case with default header values.

not found
*/
type SaveCollectionNotFound struct {
}

func (o *SaveCollectionNotFound) Error() string {
	return fmt.Sprintf("[POST /save-collection][%d] saveCollectionNotFound ", 404)
}

func (o *SaveCollectionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveCollectionInternalServerError creates a SaveCollectionInternalServerError with default headers values
func NewSaveCollectionInternalServerError() *SaveCollectionInternalServerError {
	return &SaveCollectionInternalServerError{}
}

/*SaveCollectionInternalServerError handles this case with default header values.

internal error
*/
type SaveCollectionInternalServerError struct {
}

func (o *SaveCollectionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /save-collection][%d] saveCollectionInternalServerError ", 500)
}

func (o *SaveCollectionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*SaveCollectionBody save collection body
swagger:model SaveCollectionBody
*/
type SaveCollectionBody struct {

	// id
	// Required: true
	ID *int64 `json:"id"`
}

// Validate validates this save collection body
func (o *SaveCollectionBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SaveCollectionBody) validateID(formats strfmt.Registry) error {

	if err := validate.Required("args"+"."+"id", "body", o.ID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SaveCollectionBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SaveCollectionBody) UnmarshalBinary(b []byte) error {
	var res SaveCollectionBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
