// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PayReader is a Reader for the Pay structure.
type PayReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PayReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPayNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPayUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPayNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPayInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /pay] pay", response, response.Code())
	}
}

// NewPayNoContent creates a PayNoContent with default headers values
func NewPayNoContent() *PayNoContent {
	return &PayNoContent{}
}

/*
PayNoContent describes a response with status code 204, with default header values.

OK
*/
type PayNoContent struct {
}

// IsSuccess returns true when this pay no content response has a 2xx status code
func (o *PayNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this pay no content response has a 3xx status code
func (o *PayNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pay no content response has a 4xx status code
func (o *PayNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this pay no content response has a 5xx status code
func (o *PayNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this pay no content response a status code equal to that given
func (o *PayNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the pay no content response
func (o *PayNoContent) Code() int {
	return 204
}

func (o *PayNoContent) Error() string {
	return fmt.Sprintf("[POST /pay][%d] payNoContent ", 204)
}

func (o *PayNoContent) String() string {
	return fmt.Sprintf("[POST /pay][%d] payNoContent ", 204)
}

func (o *PayNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPayUnauthorized creates a PayUnauthorized with default headers values
func NewPayUnauthorized() *PayUnauthorized {
	return &PayUnauthorized{}
}

/*
PayUnauthorized describes a response with status code 401, with default header values.

user not authorized
*/
type PayUnauthorized struct {
}

// IsSuccess returns true when this pay unauthorized response has a 2xx status code
func (o *PayUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pay unauthorized response has a 3xx status code
func (o *PayUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pay unauthorized response has a 4xx status code
func (o *PayUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this pay unauthorized response has a 5xx status code
func (o *PayUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this pay unauthorized response a status code equal to that given
func (o *PayUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the pay unauthorized response
func (o *PayUnauthorized) Code() int {
	return 401
}

func (o *PayUnauthorized) Error() string {
	return fmt.Sprintf("[POST /pay][%d] payUnauthorized ", 401)
}

func (o *PayUnauthorized) String() string {
	return fmt.Sprintf("[POST /pay][%d] payUnauthorized ", 401)
}

func (o *PayUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPayNotFound creates a PayNotFound with default headers values
func NewPayNotFound() *PayNotFound {
	return &PayNotFound{}
}

/*
PayNotFound describes a response with status code 404, with default header values.

hash not found
*/
type PayNotFound struct {
}

// IsSuccess returns true when this pay not found response has a 2xx status code
func (o *PayNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pay not found response has a 3xx status code
func (o *PayNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pay not found response has a 4xx status code
func (o *PayNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this pay not found response has a 5xx status code
func (o *PayNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this pay not found response a status code equal to that given
func (o *PayNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the pay not found response
func (o *PayNotFound) Code() int {
	return 404
}

func (o *PayNotFound) Error() string {
	return fmt.Sprintf("[POST /pay][%d] payNotFound ", 404)
}

func (o *PayNotFound) String() string {
	return fmt.Sprintf("[POST /pay][%d] payNotFound ", 404)
}

func (o *PayNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPayInternalServerError creates a PayInternalServerError with default headers values
func NewPayInternalServerError() *PayInternalServerError {
	return &PayInternalServerError{}
}

/*
PayInternalServerError describes a response with status code 500, with default header values.

Internal error
*/
type PayInternalServerError struct {
}

// IsSuccess returns true when this pay internal server error response has a 2xx status code
func (o *PayInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pay internal server error response has a 3xx status code
func (o *PayInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pay internal server error response has a 4xx status code
func (o *PayInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this pay internal server error response has a 5xx status code
func (o *PayInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this pay internal server error response a status code equal to that given
func (o *PayInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the pay internal server error response
func (o *PayInternalServerError) Code() int {
	return 500
}

func (o *PayInternalServerError) Error() string {
	return fmt.Sprintf("[POST /pay][%d] payInternalServerError ", 500)
}

func (o *PayInternalServerError) String() string {
	return fmt.Sprintf("[POST /pay][%d] payInternalServerError ", 500)
}

func (o *PayInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PayBody pay
swagger:model PayBody
*/
type PayBody struct {

	// amount
	Amount int64 `json:"amount,omitempty"`

	// hash
	// Required: true
	Hash *string `json:"hash"`
}

// UnmarshalJSON unmarshals this object while disallowing additional properties from JSON
func (o *PayBody) UnmarshalJSON(data []byte) error {
	var props struct {

		// amount
		Amount int64 `json:"amount,omitempty"`

		// hash
		// Required: true
		Hash *string `json:"hash"`
	}

	dec := json.NewDecoder(bytes.NewReader(data))
	dec.DisallowUnknownFields()
	if err := dec.Decode(&props); err != nil {
		return err
	}

	o.Amount = props.Amount
	o.Hash = props.Hash
	return nil
}

// Validate validates this pay body
func (o *PayBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHash(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PayBody) validateHash(formats strfmt.Registry) error {

	if err := validate.Required("args"+"."+"hash", "body", o.Hash); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this pay body based on context it is used
func (o *PayBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PayBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PayBody) UnmarshalBinary(b []byte) error {
	var res PayBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
