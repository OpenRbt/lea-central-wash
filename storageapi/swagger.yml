swagger: "2.0"

info:
  title: Storage
  version: 1.8.0

basePath: /
schemes:
  - http

securityDefinitions:
   pinCode:
     type: apiKey
     in: header
     name: Pin

definitions:
  StationConfigVarInt:
    type: object
    properties:
      name:
        type: string
      value:
        type: integer
      description:
        type: string
      note:
        type: string
      stationID:
        type: integer
    required:
      - name
      - value
      - stationID
  
  StationConfigVarBool:
    type: object
    properties:
      name:
        type: string
      value:
        type: boolean
      description:
        type: string
      note:
        type: string
      stationID:
        type: integer
    required:
      - name
      - value
      - stationID
  
  StationConfigVarString:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      description:
        type: string
      note:
        type: string
      stationID:
        type: integer
    required:
      - name
      - value
      - stationID
  
  ConfigVarInt:
    type: object
    properties:
      name:
        type: string
      value:
        type: integer
      description:
        type: string
      note:
        type: string
  
  ConfigVarBool:
    type: object
    properties:
      name:
        type: string
      value:
        type: boolean
      description:
        type: string
      note:
        type: string
  
  ConfigVarString:
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      description:
        type: string
      note:
        type: string

  StatusReport:
    type: object
    properties:
      lcw_info:
        type: string
      kasse_status:
        $ref: '#/definitions/Status'
      kasse_info:
        type: string
      stations:
        type: array
        items:
          $ref: '#/definitions/StationStatus'

  StationStatus:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      hash:
        $ref: '#/definitions/Hash'
      status:
        $ref: '#/definitions/Status'
      info:
        type: string
      currentBalance:
        type: integer
      currentProgram:
        type: integer
      currentProgramName:
        type: string
      ip:
        type: string  

  Status:
    type: string
    enum: ["offline", "online"]

  RelayBoard:
    type: string
    enum: ["localGPIO", "danBoard"]

  StatusCollectionReport:
    type: object
    properties:
      stations:
        type: array
        items:
          $ref: '#/definitions/CollectionReport'

  CollectionReport:
    type: object
    properties:
      id:
        type: integer
      carsTotal:
        type: integer
      coins:
        type: integer
      banknotes:
        type: integer
      electronical:
        type: integer
      service:
        type: integer
      ctime:
        type: integer
  
  CollectionReportWithUser:
    type: object
    properties:
      id:
        type: integer
      carsTotal:
        type: integer
      coins:
        type: integer
      banknotes:
        type: integer
      electronical:
        type: integer
      service:
        type: integer
      ctime:
        type: integer
      user:
        type: string
  MoneyReport:
    type: object
    required:
        - hash
    properties:
        carsTotal:
          type: integer
        coins:
          type: integer
        banknotes:
          type: integer
        electronical:
          type: integer
        service:
          type: integer
        hash:
          $ref: '#/definitions/Hash'

  RelayReport:
    type: object
    required:
      - hash
    properties:
        hash:
          $ref: '#/definitions/Hash'
        relayStats:
          type: array
          items:
            $ref: '#/definitions/RelayStat'

  StationReport:
    type: object
    properties:
        moneyReport:
          $ref: '#/definitions/MoneyReport'
        relayStats:
          type: array
          items:
            $ref: '#/definitions/RelayStat'

  RelayStat:
    type: object
    properties:
      relayID:
          type: integer
          minimum: 1
      switchedCount:
          type: integer
      totalTimeOn:
          type: integer

  Hash:
    type: string
    minLength: 1

  KeyPair:
    type: object
    required:
        - key
        - value
    properties:
        key:    
          type: string
          minLength: 1
        value:
          type: string

  StationsVariables:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      hash:
        type: string
        x-nullable: true
      keyPairs:
        type: array
        items:
          $ref: '#/definitions/KeyPair'
  
  RelayConfig:
    type: object
    properties:
      id:
        type: integer
        minimum: 1
      timeon:
        type: integer
      timeoff:
        type: integer

  KasseConfig:
    type: object
    properties:
      tax:
        type: string
        enum:
          - TAX_VAT110
          - TAX_VAT0 
          - TAX_NO
          - TAX_VAT120
      receiptItemName:
        type: string
        minLength: 1
      cashier:
        type: string
        minLength: 1
      cashierINN:
        type: string
        minLength: 12
        maxLength: 12
        pattern: '^[0123456789]{12}$'

  CardReaderConfig:
    type: object
    required:
        - stationID
    properties:
      stationID:
        type: integer
      cardReaderType:
        type: string
        enum: ["NOT_USED","VENDOTEK","PAYMENT_WORLD"]
      host:
        type: string
      port:
        type: string

  Login:
    type: string
    minLength: 4

  Password:
    type: string
    minLength: 4
    pattern: '^[0123456789]{4,}$'

  FirstName:
    type: string
    minLength: 1
    x-nullable: true

  MiddleName:
    type: string
    minLength: 1
    x-nullable: true

  LastName:
    type: string
    minLength: 1
    x-nullable: true

  IsAdmin:
    type: boolean
    x-nullable: true

  IsEngineer:
    type: boolean
    x-nullable: true

  IsOperator:
    type: boolean
    x-nullable: true

  UserConfig:
    type: object
    required:
        - login
    properties:
      login:
        $ref: '#/definitions/Login'
      firstName:
        $ref: '#/definitions/FirstName'
      middleName:
        $ref: '#/definitions/MiddleName'
      lastName:
        $ref: '#/definitions/LastName'
      isAdmin:
        $ref: '#/definitions/IsAdmin'
      isOperator:
        $ref: '#/definitions/IsOperator'
      isEngineer:
        $ref: '#/definitions/IsEngineer'

  UsersReport:
    type: object
    properties:
      users:
          type: array
          items:
            $ref: '#/definitions/UserConfig'

  Program:
    type: object
    required:
      - id
    properties:
      id:
        type: integer
        minimum: 1
      name:
        type: string
      price:
        type: integer
      preflightEnabled:
        type: boolean
      isFinishingProgram:
        type: boolean
      motorSpeedPercent:
        type: integer
        minimum: 0
        maximum: 100
      preflightMotorSpeedPercent:
        type: integer
        minimum: 0
        maximum: 100
      relays:
        type: array
        items:
          $ref: '#/definitions/RelayConfig'
      preflightRelays:
        type: array
        items:
          $ref: '#/definitions/RelayConfig'

  StationPrograms:
    type: object
    properties:
      stationID:
        type: integer
      name:
        type: string
      preflightSec:
        type: integer
      lastUpdate:
        type: integer
      relayBoard:
        $ref: '#/definitions/RelayBoard'
      programs:
        type: array
        items:
          type: object
          properties:
            buttonID:
              type: integer
            program:
              $ref: '#/definitions/Program'
  StationConfig:
    type: object
    required:
      - id
    properties:
      id:
        type: integer
      preflightSec:
        type: integer
      name:
        type: string
      hash:
        type: string
      relayBoard:
        $ref: '#/definitions/RelayBoard'

  ProgramStat:
    type: object
    properties:
      programID:
          type: integer
      programName:
          type: string
      timeOn:
          type: integer

  StationStat:
    type: object
    properties:
        stationID:
          type: integer
        pumpTimeOn:
          type: integer
        relayStats:
          type: array
          items:
            $ref: '#/definitions/RelayStat'
        programStats:
          type: array
          items:
            $ref: '#/definitions/ProgramStat'
  StationsStat:
    type: array
    items:
      $ref: '#/definitions/StationStat'

  DiscountProgram:
    type: object
    properties:
      programID:
          type: integer
      discount:
          type: integer

  AdvertisingCampaign:
    type: object
    required:
      - startDate
      - endDate
    properties:
        id:
          type: integer
        name:
          type: string
        startDate:
          description: Unix time local
          type: integer
        endDate:
          description: Unix time local
          type: integer
        enabled:
          type: boolean
        startMinute:
          type: integer
          default: 0
          maximum: 1440
          minimum: 0
        endMinute:
          type: integer
          default: 0
          maximum: 1440
          minimum: 0
        defaultDiscount:
          type: integer
        discountPrograms:
          type: array
          items:
            $ref: '#/definitions/DiscountProgram'
        weekday:
          type: array
          items:
            type: string
            enum: 
              - sunday
              - monday
              - tuesday
              - wednesday
              - thursday
              - friday
              - saturday
  AdvertisingCampaigns:
    type: array
    items:
      $ref: '#/definitions/AdvertisingCampaign'
  
  
  ButtonDiscount:
    type: object
    properties:
      buttonID:
          type: integer
      discount:
          type: integer
    
  StationDiscounts:
    type: array
    items:
      $ref: '#/definitions/ButtonDiscount'
      
consumes:
  - application/json
produces:
  - application/json          

paths:
  /get-wash-config-var-int:
    post:
      operationId: "getStationWashConfigVarInt"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgGetStationConfigVar"
            type: object
            required:
              - name
              - stationID
            properties:
              name:
                type: string
              hash:
                type: string
      responses:
          200:
            description: OK
            schema:
              $ref:  '#/definitions/StationConfigVarInt'
          404:
            description: Not found
          500:
            description: Internal error

  /get-wash-config-var-bool:
    post:
      operationId: "getStationWashConfigVarBool"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgGetStationConfigVar"
            type: object
            required:
              - name
              - stationID
            properties:
              name:
                type: string
              hash:
                type: string
      responses:
          200:
            description: OK
            schema:
              $ref:  '#/definitions/StationConfigVarBool'
          404:
            description: Not found
          500:
            description: Internal error

  /get-wash-config-var-string:
    post:
      operationId: "getStationWashConfigVarString"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgGetStationConfigVar"
            type: object
            required:
              - name
              - stationID
            properties:
              name:
                type: string
              hash:
                type: string
      responses:
          200:
            description: OK
            schema:
              $ref:  '#/definitions/StationConfigVarString'
          404:
            description: Not found
          500:
            description: Internal error

  /get-station-config-var-int:
    post:
      operationId: "getStationConfigVarInt"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgGetStationConfigVar"
            type: object
            required:
              - name
              - stationID
            properties:
              name:
                type: string
              stationID:
                type: integer
      responses:
          200:
            description: OK
            schema:
              $ref:  '#/definitions/StationConfigVarInt'
          404:
            description: Not found
          500:
            description: Internal error

  /get-station-config-var-bool:
    post:
      operationId: "getStationConfigVarBool"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgGetStationConfigVar"
            type: object
            required:
              - name
              - stationID
            properties:
              name:
                type: string
              stationID:
                type: integer
      responses:
          200:
            description: OK
            schema:
              $ref:  '#/definitions/StationConfigVarBool'
          404:
            description: Not found
          500:
            description: Internal error

  /get-station-config-var-string:
    post:
      operationId: "getStationConfigVarString"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgGetStationConfigVar"
            type: object
            required:
              - name
              - stationID
            properties:
              name:
                type: string
              stationID:
                type: integer
      responses:
          200:
            description: OK
            schema:
              $ref:  '#/definitions/StationConfigVarString'
          404:
            description: Not found
          500:
            description: Internal error

  /set-station-config-var-int:
    post:
      operationId: "setStationConfigVarInt"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            $ref:  '#/definitions/StationConfigVarInt'
      responses:
          204:
            description: OK
          404:
            description: Not found
          500:
            description: Internal error

  /set-station-config-var-bool:
    post:
      operationId: "setStationConfigVarBool"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            $ref:  '#/definitions/StationConfigVarBool'
      responses:
          204:
            description: OK
          404:
            description: Not found
          500:
            description: Internal error

  /set-station-config-var-string:
    post:
      operationId: "setStationConfigVarString"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            $ref:  '#/definitions/StationConfigVarString'
      responses:
          204:
            description: OK
          404:
            description: Not found
          500:
            description: Internal error


  /get-config-var-int:
    post:
      operationId: "getConfigVarInt"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgGetConfigVar"
            type: object
            properties:
              name:
                type: string
      responses:
          200:
            description: OK
            schema:
              $ref:  '#/definitions/ConfigVarInt'
          404:
            description: Not found
          500:
            description: Internal error

  /get-config-var-bool:
    post:
      operationId: "getConfigVarBool"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgGetConfigVar"
            type: object
            properties:
              name:
                type: string
      responses:
          200:
            description: OK
            schema:
              $ref:  '#/definitions/ConfigVarBool'
          404:
            description: Not found
          500:
            description: Internal error

  /get-config-var-string:
    post:
      operationId: "getConfigVarString"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgGetConfigVar"
            type: object
            properties:
              name:
                type: string
      responses:
          200:
            description: OK
            schema:
              $ref:  '#/definitions/ConfigVarString'
          404:
            description: Not found
          500:
            description: Internal error

  /set-config-var-int:
    post:
      operationId: "setConfigVarInt"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            $ref:  '#/definitions/ConfigVarInt'
      responses:
          204:
            description: OK
          500:
            description: Internal error

  /set-config-var-bool:
    post:
      operationId: "setConfigVarBool"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            $ref:  '#/definitions/ConfigVarBool'
      responses:
          204:
            description: OK
          500:
            description: Internal error

  /set-config-var-string:
    post:
      operationId: "setConfigVarString"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            $ref:  '#/definitions/ConfigVarString'
      responses:
          204:
            description: OK
          500:
            description: Internal error

  /get-station-discounts:
    post:
      operationId: "getStationDiscounts"
      parameters:
        - name: args
          in: body
          required: true
          schema:
            title: "ArgGetStationDiscounts"
            type: object
            properties:
              hash:
                type: string
      responses:
        200:
          description: OK
          schema:
            $ref:  '#/definitions/StationDiscounts'
        404:
          description: Not found
        500:
          description: Internal error

  /add-advertising-campaign:
    post:
      operationId: "addAdvertisingCampaign"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            $ref: '#/definitions/AdvertisingCampaign'
      responses:
        204:
          description: OK
        401:
          description: PIN is missing or invalid
        403:
          description: Access forbiddenn
        500:
          description: internal error
  /edit-advertising-campaign:
    post:
      operationId: "editAdvertisingCampaign"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            $ref: '#/definitions/AdvertisingCampaign'
      responses:
        204:
          description: OK
        401:
          description: PIN is missing or invalid
        403:
          description: Access forbiddenn
        500:
          description: internal error

  /advertising-campaign:
    post:
      operationId: "advertisingCampaign"
      security:
        - pinCode: []
      parameters:
        - name: args
          in: body
          schema:
            title: "ArgAdvertisingCampagin"
            type: object
            properties:
              startDate:
                description: Unix time local
                type: integer
                x-nullable: true
              endDate:
                description: Unix time local
                type: integer
                x-nullable: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AdvertisingCampaigns'
        401:
          description: PIN is missing or invalid
        403:
          description: Access forbiddenn
        500:
          description: internal error

  /advertising-campaign-by-id:
    post:
      operationId: "advertisingCampaignByID"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgAdvertisingCampaignByID"
            type: object
            required:
              - id
            properties:
              id:
                type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/AdvertisingCampaign'
        401:
          description: PIN is missing or invalid
        403:
          description: Access forbiddenn
        404:
          description: not found
        500:
          description: internal error

  /del-advertising-campaign:
    post:
      operationId: "delAdvertisingCampaign"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgDelAdvertisingCampagin"
            type: object
            required:
              - id
            properties:
              id:
                type: integer
      responses:
        204:
          description: OK
        401:
          description: PIN is missing or invalid
        403:
          description: Access forbiddenn
        500:
          description: internal error

  /station-stat-current:
    post:
      operationId: "stationStatCurrent"
      security:
        - pinCode: []
      parameters:
        - name: args
          in: body
          schema:
            title: "ArgStationStat"
            type: object
            properties:
              stationID:
                type: integer
                x-nullable: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StationsStat'
        401:
          description: PIN is missing or invalid
        403:
          description: Access forbiddenn
        500:
          description: internal error

  /station-stat-dates:
    post:
      operationId: "stationStatDates"
      security:
        - pinCode: []
      parameters:
        - name: args
          in: body
          schema:
            title: "ArgStationStatDates"
            type: object
            required:
              - startDate
              - endDate
            properties:
              stationID:
                type: integer
                x-nullable: true
              startDate:
                description: Unix time
                type: integer
              endDate:
                description: Unix time
                type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StationsStat'
        401:
          description: PIN is missing or invalid
        403:
          description: Access forbiddenn
        500:
          description: internal error

  /reset-station-stat:
    post:
      operationId: "resetStationStat"
      security:
        - pinCode: []
      parameters:
        - name: args
          in: body
          schema:
            title: "ArgResetStationStat"
            type: object
            required:
              - stationID
            properties:
              stationID:
                type: integer
      responses:
        204:
          description: OK
        401:
          description: PIN is missing or invalid
        403:
          description: Access forbiddenn
        500:
          description: internal error

  /station-report-dates:
    post:
      operationId: "stationReportDates"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgStationReportDates"
            type: object
            required:
              - id
              - startDate
              - endDate
            properties:
              id:
                type: integer
              startDate:
                description: Unix time
                type: integer
              endDate:
                description: Unix time
                type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StationReport'
        404:
          description: not found
        500:
          description: internal error
  /station-report-current-money:
    post:
      operationId: "stationReportCurrentMoney"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgStationReportCurrentMoney"
            type: object
            required:
              - id
            properties:
              id:
                type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StationReport'
        404:
          description: not found
        500:
          description: internal error

  /status:
    get:
      operationId: "status"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StatusReport'
        500:
          description: internal error

  /status-collection:
    get:
      operationId: "statusCollection"
      security:
        - pinCode: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StatusCollectionReport'
        500:
          description: internal error
        401:
          description: PIN is missing or invalid

  /add-service-amount:
    post:
      operationId: "addServiceAmount"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgAddServiceAmount"
            type: object
            properties:
              hash:
                type: string
              amount:
                type: integer
      responses:
        204:
          description: OK
        404:
          description: not found
        500:
          description: internal error

  /station:
    post:
      operationId: "station"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            type: object
            required:
              - id
            properties:
              id:
                type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StationConfig'
        401:
          description: Access denied. It will happen when you try to change the ID at the station online.
        404:
          description: not found
        500:
          description: internal error

  /set-station:
    post:
      operationId: "setStation"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            $ref: '#/definitions/StationConfig'
      responses:
        204:
          description: OK
        401:
          description: Access denied. It will happen when you try to change the ID at the station online.
        404:
          description: not found
        422:
          description: validation error
        500:
          description: internal error

  /del-station:
    post:
      operationId: "delStation"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgDelStation"
            type: object
            required:
              - id
            properties:
              id:
                type: integer
      responses:
        204:
          description: OK
        404:
          description: not found
        500:
          description: internal error
            
  /save-relay:
    post:
      operationId: "saveRelay"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            $ref: '#/definitions/RelayReport'
      responses:
        204:
          description: OK
        404:
          description: not found
        500:
          description: internal error
          
  /load-relay:
    post:
      operationId: "loadRelay"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            type: object
            required:
              - hash
            properties:
              hash:
                $ref: '#/definitions/Hash'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/RelayReport'
        404:
          description: not found
        500:
          description: internal error

  /save-money:
    post:
      operationId: "saveMoney"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            $ref: '#/definitions/MoneyReport'
      responses:
        204:
          description: OK
        404:
          description: not found
        500:
          description: internal error

  /save-collection:
    post:
      operationId: "saveCollection"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            type: object
            required:
              - id
            properties:
              id:
                type: integer
      responses:
        204: 
          description: OK
        404:
          description: not found
        500:
          description: internal error
        401:
          description: PIN is missing or invalid

  /load-money:
    post:
      operationId: "loadMoney"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgLoadMoney"
            type: object
            required:
              - hash
            properties:
              hash:
                $ref: '#/definitions/Hash'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MoneyReport'
        404:
          description: not found
        500:
          description: internal error

  /save:
    post:
      operationId: "save"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgSave"
            type: object
            required:
              - hash
              - keyPair
            properties:
              hash:
                $ref: '#/definitions/Hash'
              keyPair:
                $ref: '#/definitions/KeyPair'
      responses:
        204:
          description: OK
        404:
          description: not found
        500:
          description: internal error
  /load:
    post:
      operationId: "load"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgLoad"
            type: object
            required:
              - hash
              - key
            properties:
              hash:
                $ref: '#/definitions/Hash'
              key:
                type: string
                minLength: 1
      responses:
        200:
          description: OK
          schema:
            type: string
        404:
          description: not found
        500:
          description: internal error
  /load-from-station:
    post:
      operationId: "loadFromStation"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgLoadFromStation"
            type: object
            required:
              - hash
              - stationID
              - key
            properties:
              hash:
                $ref: '#/definitions/Hash'
              stationID:
                type: integer
              key:
                type: string
                minLength: 1
      responses:
        200:
          description: OK
          schema:
            type: string
        404:
          description: not found
        500:
          description: internal error
  /ping:
    post:
      operationId: "ping"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgPing"
            type: object
            required:
              - hash
            properties:
              hash:
                $ref: '#/definitions/Hash'
              currentBalance:
                type: integer
              currentProgram:
                type: integer
      responses:
        200:
          description: OK
          schema:
            title: "ResponsePing"
            type: object
            required:
              - serviceAmount
              - openStation
            properties:
              serviceAmount:
                type: integer
              openStation:
                type: boolean
              lastUpdate:
                type: integer
              lastDiscountUpdate:
                type: integer
              ButtonID:
                type: integer
                
    get:
      operationId: "getPing"
      responses:
        200:
          description: OK
  /info:
    get:
      operationId: "info"
      responses:
        200:
          description: OK
          schema:
            type: string
  /station-by-hash:
    post:
      operationId: "stationByHash"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgStationByHash"
            type: object
            required:
              - hash
            properties:
              hash:
                $ref: '#/definitions/Hash'
      responses:
        200:
          description: OK
          schema:
            type: integer
        500:
          description: internal error
  /save-if-not-exists:
    post:
      operationId: "saveIfNotExists"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgSaveIfNotExists"
            type: object
            required:
              - hash
              - keyPair
            properties:
              hash:
                $ref: '#/definitions/Hash'
              keyPair:
                $ref: '#/definitions/KeyPair'
      responses:
        204:
          description: OK
        404:
          description: not found
        500:
          description: internal error
  /stations-variables:
    post:
      operationId: "stationsVariables"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/StationsVariables'
        500:
          description: internal error
  /open-station:
    post:
      operationId: "openStation"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgOpenStation"
            type: object
            required:
              - stationID
            properties:
              stationID:
                type: integer
      responses:
        204:
          description: OK
        404:
          description: not found
        500:
          description: internal error
  
  /programs:
    post:
      operationId: "programs"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgPrograms"
            type: object
            properties:
              programID:
                type: integer
                minimum: 1
                x-nullable: true
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Program'
        500:
          description: internal error
  
  /set-program:
    post:
      operationId: "setProgram"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            $ref: '#/definitions/Program'
      responses:
        204:
          description: OK
        500:
          description: internal error
  
  /station-program-by-hash:
    post:
      operationId: "stationProgramByHash"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgStationProgramByHash"
            type: object
            required:
              - hash
            properties:
              hash:
                $ref: '#/definitions/Hash'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/StationPrograms'
        500:
          description: internal error
          
  /station-button:
    post:
      operationId: "stationButton"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgStationButton"
            type: object
            required:
              - stationID
            properties:
              stationID:
                type: integer
                minimum: 1
      responses:
        200:
          description: OK
          schema:
            title: "ResponseStationButton"
            type: object
            properties:
              buttons:
                type: array
                items:
                  type: object
                  properties:
                    buttonID:
                      type: integer
                    programID:
                      type: integer
        500:
          description: internal error

  /set-station-button:
    post:
      operationId: "setStationButton"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgSetStationButton"
            type: object
            required:
              - stationID
            properties:
              stationID:
                type: integer
                minimum: 1
              buttons:
                type: array
                items:
                  type: object
                  properties:
                    buttonID:
                      type: integer
                    programID:
                      type: integer
      responses:
        204:
          description: OK
        422:
          description: validation error
          schema:
            type: string
        500:
          description: internal error
  
  /kasse:
    post:
      operationId: "kasse"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/KasseConfig'
        404:
          description: not found
        500:
          description: internal error
  /set-kasse:
    post:
      operationId: "setKasse"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            $ref: '#/definitions/KasseConfig'
      responses:
        204:
          description: OK
        500:
          description: internal error

  /card-reader-config:
    post:
      operationId: "cardReaderConfig"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgCardReaderConfig"
            type: object
            required:
              - stationID
            properties:
              stationID:
                type: integer
                minimum: 1
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CardReaderConfig'
        404:
          description: not found
        500:
          description: internal error
  /set-card-reader-config:
    post:
      operationId: "setCardReaderConfig"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            $ref: '#/definitions/CardReaderConfig'
      responses:
        204:
          description: OK
        404:
          description: not found
        422:
          description: validation error
          schema:
            type: string
        500:
          description: internal error
  /card-reader-config-by-hash:
    post:
      operationId: "cardReaderConfigByHash"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgCardReaderConfigByCash"
            type: object
            required:
              - hash
            properties:
              hash:
                $ref: '#/definitions/Hash'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/CardReaderConfig'
        404:
          description: not found
        500:
          description: internal error

  /users:
    get:
      operationId: "getUsers"
      security:
        - pinCode: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UsersReport'
        401:
          description: PIN is missing or invalid
        403:
          description: Access forbidden
        500:
          description: internal error

  /user-password:
    post:
      operationId: "updateUserPassword"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgUserPassword"
            type: object
            required:
              - login
              - oldPassword
              - newPassword
            properties:
              login:
                $ref: '#/definitions/Login'
              oldPassword:
                $ref: '#/definitions/Password'
              newPassword:
                $ref: '#/definitions/Password'
      responses:
        201:
          description: OK
          schema:
            title: "ResponseUserPassword"
            type: object
            required:
              - id
            properties:
              id:
                type: integer
        401:
          description: PIN is missing or invalid
        403:
          description: Access forbidden
        404:
          description: not found
        500:
          description: internal error

  /user:
    get:
      operationId: "getUser"
      security:
        - pinCode: []
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserConfig'
        401:
          description: PIN is missing or invalid
    post:
      operationId: "createUser"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgUserCreate"
            type: object
            required:
              - login
              - password
            properties:
              login:
                $ref: '#/definitions/Login'
              firstName:
                $ref: '#/definitions/FirstName'
              middleName:
                $ref: '#/definitions/MiddleName'
              lastName:
                $ref: '#/definitions/LastName'
              isAdmin:
                $ref: '#/definitions/IsAdmin'
              isOperator:
                $ref: '#/definitions/IsOperator'
              isEngineer:
                $ref: '#/definitions/IsEngineer'
              password:
                $ref: '#/definitions/Password'
      responses:
        201:
          description: OK
          schema:
            title: "ResponseUserCreate"
            type: object
            required:
              - id
            properties:
              id:
                type: integer
        401:
          description: PIN is missing or invalid
        403:
          description: Access forbidden
        409:
          description: Conflict
          schema:
            title: "ResponseUserCreateConflict"
            type: object
            required:
              - code
              - message
            properties:
              code:
                type: integer
              message:
                type: string
        500:
          description: internal error
    put:
      operationId: "updateUser"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgUserUpdate"
            type: object
            required:
              - login
            properties:
              login:
                $ref: '#/definitions/Login'
              firstName:
                $ref: '#/definitions/FirstName'
              middleName:
                $ref: '#/definitions/MiddleName'
              lastName:
                $ref: '#/definitions/LastName'
              isAdmin:
                $ref: '#/definitions/IsAdmin'
              isOperator:
                $ref: '#/definitions/IsOperator'
              isEngineer:
                $ref: '#/definitions/IsEngineer'
      responses:
        201:
          description: OK
          schema:
            title: "ResponseUserUpdate"
            type: object
            required:
              - id
            properties:
              id:
                type: integer
        401:
          description: PIN is missing or invalid
        403:
          description: Access forbidden
        404:
          description: Not found
        500:
          description: internal error
    delete:
      operationId: "deleteUser"
      security:
        - pinCode: []
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgUserDelete"
            type: object
            required:
              - login
            properties:
              login:
                $ref: '#/definitions/Login'
      responses:
        204:
          description: OK
        401:
          description: PIN is missing or invalid
        403:
          description: Access forbidden
        409:
          description: Conflict
          schema:
            type: object
            required:
              - code
              - message
            properties:
              code:
                type: integer
              message:
                type: string
        500:
          description: internal error
  
  /run-program:
    post:
      operationId: "runProgram"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgRunProgram"
            type: object
            required:
              - hash
              - programID
              - preflight
            properties:
              hash:
                $ref: '#/definitions/Hash'
              programID:
                type: integer
              preflight:
                type: boolean
      responses:
        204:
          description: OK
        404:
          description: not found
          schema:
            type: string
        500:
          description: internal error
  
  /run-2program:
    post:
      operationId: "run2Program"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgRun2Program"
            type: object
            required:
              - hash
              - programID
              - programID2
              - preflight
            properties:
              hash:
                $ref: '#/definitions/Hash'
              programID:
                type: integer
              programID2:
                type: integer
              preflight:
                type: boolean
      responses:
        204:
          description: OK
        404:
          description: not found
          schema:
            type: string
        500:
          description: internal error
  
  /run-dispenser:
    post:
      operationId: "measureVolumeMilliliters"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgMeasureVolumeMilliliters"
            type: object
            required:
              - hash
              - volume
            properties:
              hash:
                $ref: '#/definitions/Hash'
              volume:
                type: integer
      responses:
        204:
          description: OK
        404:
          description: not found
          schema:
            type: string
        500:
          description: internal error

  /getLevel:
    post:
      operationId: "GetLevel"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgGetLevel"
            type: object
            required:
              - hash
            properties:
              hash:
                $ref: '#/definitions/Hash'
      responses:
        200:
          description: OK
          schema:
            title: "ResponseGetLevel"
            type: object
            required:
              - level
            properties:
              level: 
                type: integer
        204:
          description: OK
        404:
          description: not found
          schema:
            type: string
        500:
          description: internal error

  /volume-dispenser:
    post:
      operationId: "VolumeDispenser"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "VolumeDispenser"
            type: object
            required:
              - hash
            properties:
              hash:
                $ref: '#/definitions/Hash'
      responses:
        200:
          description: OK
          schema:
            title: "ResponseVolumeDispenser"
            type: object
            required:
              - volume
              - status
            properties:
              volume: 
                type: integer
              status:
                type: string
        204:
          description: OK
        404:
          description: not found
          schema:
            type: string
        500:
          description: internal error

  /press-button:
    post:
      operationId: "pressButton"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgPressButton"
            type: object
            required:
              - hash
              - buttonID
            properties:
              hash:
                $ref: '#/definitions/Hash'
              buttonID:
                type: integer
      responses:
        204:
          description: OK
        404:
          description: not found
          schema:
            type: string
        500:
          description: internal error
          
  /station-collection-report-dates:
    post:
      security:
        - pinCode: []
      operationId: "stationCollectionReportDates"
      parameters:
        - name: args
          required: true
          in: body
          schema:
            title: "ArgCollectionReportDates"
            type: object
            required:
              - stationId
            properties:
              stationID:
                type: integer
              startDate:
                description: Unix time
                type: integer
                x-nullable: true
              endDate:
                description: Unix time
                type: integer
                x-nullable: true
      responses:
        200:
          description: OK
          schema:
            title: "ResponseStationCollectionReportDates"
            type: object
            required:
              - collectionReports
            properties:
              collectionReports:
                type: array
                items:
                  $ref: '#/definitions/CollectionReportWithUser'
        401:
          description: PIN is missing or invalid
        403:
          description: Access forbiddenn
        404:
          description: not found
        500:
          description: internal error

